definitions:
  drm.DRM:
    properties:
      driver_date:
        type: string
      driver_description:
        type: string
      driver_name:
        type: string
      driver_version:
        type: string
    type: object
  github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo:
    properties:
      failed_message:
        type: string
      group_uuid:
        type: string
      ip_address:
        type: string
      password:
        type: string
      private_key:
        type: string
      public_key:
        type: string
      ssh_port:
        type: integer
      status:
        type: string
      type:
        type: string
      user:
        type: string
      uuid:
        type: string
    required:
    - group_uuid
    - ip_address
    - ssh_port
    - user
    - uuid
    type: object
  github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup:
    properties:
      name:
        type: string
      uuid:
        type: string
    required:
    - name
    - uuid
    type: object
  github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.SavedInfraInfo:
    properties:
      connection_uuid:
        type: string
      infra_data:
        type: string
      saved_time:
        type: string
      status:
        type: string
    required:
    - connection_uuid
    - infra_data
    type: object
  github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.SavedSoftwareInfo:
    properties:
      connection_uuid:
        type: string
      saved_time:
        type: string
      software_data:
        type: string
      status:
        type: string
    required:
    - connection_uuid
    - software_data
    type: object
  infra.CPU:
    properties:
      cache:
        description: KB
        type: integer
      cores:
        description: ea
        type: integer
      cpus:
        description: ea
        type: integer
      max_speed:
        description: MHz
        type: integer
      model:
        type: string
      threads:
        description: ea
        type: integer
      vendor:
        type: string
    type: object
  infra.Compute:
    properties:
      compute_resource:
        $ref: '#/definitions/infra.ComputeResource'
      connection:
        items:
          $ref: '#/definitions/infra.Connection'
        type: array
      os:
        $ref: '#/definitions/infra.System'
    type: object
  infra.ComputeResource:
    properties:
      cpu:
        $ref: '#/definitions/infra.CPU'
      data_disk:
        items:
          $ref: '#/definitions/infra.Disk'
        type: array
      memory:
        $ref: '#/definitions/infra.Memory'
      root_disk:
        $ref: '#/definitions/infra.Disk'
    type: object
  infra.Connection:
    properties:
      keypair:
        $ref: '#/definitions/infra.Keypair'
    type: object
  infra.Disk:
    properties:
      label:
        type: string
      size:
        description: GB
        type: integer
      type:
        type: string
    type: object
  infra.GPU:
    properties:
      drm:
        items:
          $ref: '#/definitions/drm.DRM'
        type: array
      nvidia:
        items:
          $ref: '#/definitions/nvidia.NVIDIA'
        type: array
    type: object
  infra.Infra:
    properties:
      compute:
        $ref: '#/definitions/infra.Compute'
      gpu:
        $ref: '#/definitions/infra.GPU'
      network:
        $ref: '#/definitions/network.Network'
      storage:
        $ref: '#/definitions/infra.Storage'
    type: object
  infra.Kernel:
    properties:
      architecture:
        type: string
      release:
        type: string
      version:
        type: string
    type: object
  infra.Keypair:
    properties:
      name:
        type: string
      private_key:
        type: string
      public_key:
        type: string
    type: object
  infra.Memory:
    properties:
      size:
        description: MB
        type: integer
      speed:
        description: MHz
        type: integer
      type:
        type: string
    type: object
  infra.MountPoint:
    properties:
      mounted_information:
        items:
          $ref: '#/definitions/infra.MountedInformation'
        type: array
    type: object
  infra.MountedInformation:
    properties:
      destination:
        type: string
      filesystem:
        type: string
      option:
        type: string
      source:
        type: string
    type: object
  infra.Node:
    properties:
      hostname:
        type: string
      hypervisor:
        type: string
      machineid:
        type: string
      timezone:
        type: string
    type: object
  infra.OS:
    properties:
      architecture:
        type: string
      name:
        type: string
      release:
        type: string
      vendor:
        type: string
      version:
        type: string
    type: object
  infra.Storage:
    properties:
      mount_point:
        $ref: '#/definitions/infra.MountPoint'
    type: object
  infra.System:
    properties:
      kernel:
        $ref: '#/definitions/infra.Kernel'
      node:
        $ref: '#/definitions/infra.Node'
      os:
        $ref: '#/definitions/infra.OS'
    type: object
  mount.Propagation:
    enum:
    - rprivate
    - private
    - rshared
    - shared
    - rslave
    - slave
    type: string
    x-enum-varnames:
    - PropagationRPrivate
    - PropagationPrivate
    - PropagationRShared
    - PropagationShared
    - PropagationRSlave
    - PropagationSlave
  mount.Type:
    enum:
    - bind
    - volume
    - tmpfs
    - npipe
    - cluster
    type: string
    x-enum-varnames:
    - TypeBind
    - TypeVolume
    - TypeTmpfs
    - TypeNamedPipe
    - TypeCluster
  network.CSP:
    properties:
      name:
        type: string
      nlb:
        items:
          $ref: '#/definitions/network.NLB'
        type: array
      security_group:
        items:
          $ref: '#/definitions/network.SecurityGroup'
        type: array
      vpc:
        items:
          $ref: '#/definitions/network.VPC'
        type: array
    type: object
  network.DNS:
    properties:
      dns_server:
        description: IPv4 or IPv6 DNS Server Addresses
        items:
          type: string
        type: array
    type: object
  network.EndpointIPAMConfig:
    properties:
      ipv4Address:
        type: string
      ipv6Address:
        type: string
      linkLocalIPs:
        items:
          type: string
        type: array
    type: object
  network.EndpointSettings:
    properties:
      aliases:
        description: Aliases holds the list of extra, user-specified DNS names for
          this endpoint.
        items:
          type: string
        type: array
      dnsnames:
        description: |-
          DNSNames holds all the (non fully qualified) DNS names associated to this endpoint. First entry is used to
          generate PTR records.
        items:
          type: string
        type: array
      driverOpts:
        additionalProperties:
          type: string
        type: object
      endpointID:
        type: string
      gateway:
        type: string
      globalIPv6Address:
        type: string
      globalIPv6PrefixLen:
        type: integer
      ipaddress:
        type: string
      ipamconfig:
        allOf:
        - $ref: '#/definitions/network.EndpointIPAMConfig'
        description: Configurations
      ipprefixLen:
        type: integer
      ipv6Gateway:
        type: string
      links:
        items:
          type: string
        type: array
      macAddress:
        description: |-
          MacAddress may be used to specify a MAC address when the container is created.
          Once the container is running, it becomes operational data (it may contain a
          generated address).
        type: string
      networkID:
        description: Operational data
        type: string
    type: object
  network.FirewallRule:
    properties:
      action:
        description: allow, deny
        type: string
      direction:
        description: inbound, outbound
        type: string
      dst:
        type: string
      dst_ports:
        type: string
      priority:
        description: Lower has higher priority
        type: integer
      protocol:
        description: TCP, UDP, ICMP
        type: string
      src:
        type: string
      src_ports:
        type: string
    type: object
  network.Host:
    properties:
      dns:
        $ref: '#/definitions/network.DNS'
      firewall_rule:
        items:
          $ref: '#/definitions/network.FirewallRule'
        type: array
      network_interface:
        items:
          $ref: '#/definitions/network.NIC'
        type: array
      route:
        items:
          $ref: '#/definitions/network.Route'
        type: array
    type: object
  network.NIC:
    properties:
      address:
        items:
          type: string
        type: array
      gateway:
        items:
          type: string
        type: array
      interface:
        type: string
      mac_address:
        type: string
      mtu:
        type: integer
    type: object
  network.NLB:
    properties:
      description:
        type: string
      health_checker:
        type: string
      id:
        type: string
      listener:
        type: string
      name:
        type: string
      target_group:
        type: string
    type: object
  network.Network:
    properties:
      csp:
        $ref: '#/definitions/network.CSP'
      host:
        $ref: '#/definitions/network.Host'
    type: object
  network.Route:
    properties:
      destination:
        type: string
      netmask:
        type: string
      next_hop:
        type: string
    type: object
  network.SecurityGroup:
    properties:
      description:
        type: string
      firewall_rule:
        items:
          $ref: '#/definitions/network.FirewallRule'
        type: array
      id:
        type: string
      name:
        type: string
      vnet_id:
        type: string
    type: object
  network.Subnet:
    properties:
      ipv4_cidr:
        description: IPv4 Network Address with CIDR Prefix Length
        type: string
      ipv6_cidr:
        description: IPv6 Network Address with CIDR Prefix Length
        type: string
      name:
        type: string
    type: object
  network.VPC:
    properties:
      address_space:
        description: IPv4 CIDR or IPv6 CIDR
        items:
          type: string
        type: array
      dns_server:
        items:
          $ref: '#/definitions/network.DNS'
        type: array
      id:
        type: string
      region:
        type: string
      subnet:
        items:
          $ref: '#/definitions/network.Subnet'
        type: array
    type: object
  nvidia.DeviceAttribute:
    properties:
      cuda_version:
        type: string
      driver_version:
        type: string
      gpu_uuid:
        type: string
      product_architecture:
        type: string
      product_brand:
        type: string
      product_name:
        type: string
    type: object
  nvidia.NVIDIA:
    properties:
      device_attribute:
        $ref: '#/definitions/nvidia.DeviceAttribute'
      performance:
        $ref: '#/definitions/nvidia.Performance'
    type: object
  nvidia.Performance:
    properties:
      bar1_memory_total:
        description: mb
        type: integer
      bar1_memory_usage:
        description: percent
        type: integer
      bar1_memory_used:
        description: mb
        type: integer
      fb_memory_total:
        description: mb
        type: integer
      fb_memory_usage:
        description: percent
        type: integer
      fb_memory_used:
        description: mb
        type: integer
      gpu_usage:
        description: percent
        type: integer
    type: object
  pkg_api_rest_controller.SimpleMsg:
    properties:
      message:
        type: string
    type: object
  software.DEB:
    properties:
      architecture:
        type: string
      conffiles:
        items:
          type: string
        type: array
      depends:
        type: string
      description:
        type: string
      homepage:
        type: string
      installed_size:
        type: integer
      maintainer:
        type: string
      multi_arch:
        type: string
      package:
        type: string
      pre_depends:
        type: string
      priority:
        type: string
      section:
        type: string
      source:
        type: string
      status:
        type: string
      version:
        type: string
    type: object
  software.Docker:
    properties:
      containers:
        items:
          $ref: '#/definitions/types.Container'
        type: array
    type: object
  software.Podman:
    properties:
      containers:
        items:
          $ref: '#/definitions/types.Container'
        type: array
    type: object
  software.RPM:
    properties:
      arch:
        type: string
      license:
        type: string
      name:
        type: string
      release:
        type: string
      requires:
        items:
          type: string
        type: array
      size:
        type: integer
      sourceRpm:
        type: string
      summary:
        type: string
      vendor:
        type: string
      version:
        type: string
    type: object
  software.Software:
    properties:
      deb:
        items:
          $ref: '#/definitions/software.DEB'
        type: array
      docker:
        $ref: '#/definitions/software.Docker'
      podman:
        $ref: '#/definitions/software.Podman'
      rpm:
        items:
          $ref: '#/definitions/software.RPM'
        type: array
    type: object
  types.Container:
    properties:
      Id:
        type: string
      command:
        type: string
      created:
        type: integer
      hostConfig:
        properties:
          networkMode:
            type: string
        type: object
      image:
        type: string
      imageID:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      mounts:
        items:
          $ref: '#/definitions/types.MountPoint'
        type: array
      names:
        items:
          type: string
        type: array
      networkSettings:
        $ref: '#/definitions/types.SummaryNetworkSettings'
      ports:
        items:
          $ref: '#/definitions/types.Port'
        type: array
      sizeRootFs:
        type: integer
      sizeRw:
        type: integer
      state:
        type: string
      status:
        type: string
    type: object
  types.MountPoint:
    properties:
      destination:
        description: |-
          Destination is the path relative to the container root (`/`) where the
          Source is mounted inside the container.
        type: string
      driver:
        description: Driver is the volume driver used to create the volume (if it
          is a volume).
        type: string
      mode:
        description: |-
          Mode is a comma separated list of options supplied by the user when
          creating the bind/volume mount.

          The default is platform-specific (`"z"` on Linux, empty on Windows).
        type: string
      name:
        description: |-
          Name is the name reference to the underlying data defined by `Source`
          e.g., the volume name.
        type: string
      propagation:
        allOf:
        - $ref: '#/definitions/mount.Propagation'
        description: |-
          Propagation describes how mounts are propagated from the host into the
          mount point, and vice-versa. Refer to the Linux kernel documentation
          for details:
          https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt

          This field is not used on Windows.
      rw:
        description: RW indicates whether the mount is mounted writable (read-write).
        type: boolean
      source:
        description: |-
          Source is the source location of the mount.

          For volumes, this contains the storage location of the volume (within
          `/var/lib/docker/volumes/`). For bind-mounts, and `npipe`, this contains
          the source (host) part of the bind-mount. For `tmpfs` mount points, this
          field is empty.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/mount.Type'
        description: |-
          Type is the type of mount, see `Type<foo>` definitions in
          github.com/docker/docker/api/types/mount.Type
    type: object
  types.Port:
    properties:
      IP:
        description: Host IP address that the container's port is mapped to
        type: string
      PrivatePort:
        description: |-
          Port on the container
          Required: true
        type: integer
      PublicPort:
        description: Port exposed on the host
        type: integer
      Type:
        description: |-
          type
          Required: true
        type: string
    type: object
  types.SummaryNetworkSettings:
    properties:
      networks:
        additionalProperties:
          $ref: '#/definitions/network.EndpointSettings'
        type: object
    type: object
info:
  contact: {}
paths:
  /connection_info:
    get:
      consumes:
      - application/json
      description: Get a list of connection information.
      parameters:
      - description: Page of the connection information list.
        in: query
        name: page
        type: string
      - description: Row of the connection information list.
        in: query
        name: row
        type: string
      - description: UUID of the connection information.
        in: query
        name: uuid
        type: string
      - description: Migration group UUID.
        in: query
        name: group_uuid
        type: string
      - description: IP address of the connection information.
        in: query
        name: ip_address
        type: string
      - description: SSH port of the connection information.
        in: query
        name: ssh_port
        type: string
      - description: User of the connection information.
        in: query
        name: user
        type: string
      - description: Type of the connection information.
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get a list of connection information.
          schema:
            items:
              $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
            type: array
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get a list of connection information.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: List ConnectionInfo
      tags:
      - '[On-premise] ConnectionInfo'
    post:
      consumes:
      - application/json
      description: Create the connection information.
      parameters:
      - description: Connection information of the node.
        in: body
        name: ConnectionInfo
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully register the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to register the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Create ConnectionInfo
      tags:
      - '[On-premise] ConnectionInfo'
  /connection_info/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete the connection information.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to delete the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Delete ConnectionInfo
      tags:
      - '[On-premise] ConnectionInfo'
    get:
      consumes:
      - application/json
      description: Get the connection information.
      parameters:
      - description: UUID of the connectionInfo
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Get ConnectionInfo
      tags:
      - '[On-premise] ConnectionInfo'
    put:
      consumes:
      - application/json
      description: Update the connection information.
      parameters:
      - description: Connection information to modify.
        in: body
        name: ConnectionInfo
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to update the connection information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Update ConnectionInfo
      tags:
      - '[On-premise] ConnectionInfo'
  /import/infra/{uuid}:
    get:
      consumes:
      - application/json
      description: Import the infra information.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully saved the infra information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.SavedInfraInfo'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to save the infra information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Import Infra
      tags:
      - '[Import] ImportInfra'
  /import/software/{uuid}:
    get:
      consumes:
      - application/json
      description: Import the software information.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully saved the software information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.SavedSoftwareInfo'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to save the software information
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Import software
      tags:
      - '[Import] ImportSoftware'
  /infra/{uuid}:
    get:
      consumes:
      - application/json
      description: Get the infra information of the connection information.
      parameters:
      - description: UUID of the connectionInfo
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get information of the infra.
          schema:
            $ref: '#/definitions/infra.Infra'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get information of the infra.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Get Infra Information
      tags:
      - '[Infra] Get infra info'
  /migration_group:
    get:
      consumes:
      - application/json
      description: Get a list of migration group.
      parameters:
      - description: Page of the migration group list.
        in: query
        name: page
        type: string
      - description: Row of the migration group list.
        in: query
        name: row
        type: string
      - description: UUID of the migration group.
        in: query
        name: uuid
        type: string
      - description: Migration group name.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get a list of migration group.
          schema:
            items:
              $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
            type: array
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get a list of migration group.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: List MigrationGroup
      tags:
      - '[On-premise] MigrationGroup'
    post:
      consumes:
      - application/json
      description: Register the migration group.
      parameters:
      - description: migration group of the node.
        in: body
        name: MigrationGroup
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully register the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to register the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Register MigrationGroup
      tags:
      - '[On-premise] MigrationGroup'
  /migration_group/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete the migration group.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to delete the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Delete MigrationGroup
      tags:
      - '[On-premise] MigrationGroup'
    get:
      consumes:
      - application/json
      description: Get the migration group.
      parameters:
      - description: UUID of the MigrationGroup
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Get MigrationGroup
      tags:
      - '[On-premise] MigrationGroup'
    put:
      consumes:
      - application/json
      description: Update the migration group.
      parameters:
      - description: migration group to modify.
        in: body
        name: MigrationGroup
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to update the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Update MigrationGroup
      tags:
      - '[On-premise] MigrationGroup'
  /migration_group/check/{uuid}:
    get:
      consumes:
      - application/json
      description: Check if SSH connection is available for each connection info in
        migration group. Show each status by returning connection info list.
      parameters:
      - description: migration group to check SSH connection for each connection info
          in migration group
        in: body
        name: MigrationGroup
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.MigrationGroup'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully checked SSH connection for the migration group
          schema:
            items:
              $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_model.ConnectionInfo'
            type: array
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to check SSH connection for the migration group
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Check Connection MigrationGroup
      tags:
      - '[On-premise] MigrationGroup'
  /software/{uuid}:
    get:
      consumes:
      - application/json
      description: Get the software information of the connection information.
      parameters:
      - description: UUID of the connectionInfo
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get information of the software.
          schema:
            $ref: '#/definitions/software.Software'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get information of the software.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-honeybee_server_pkg_api_rest_common.ErrorResponse'
      summary: Get Software Information
      tags:
      - '[Software] Get Software info'
swagger: "2.0"
